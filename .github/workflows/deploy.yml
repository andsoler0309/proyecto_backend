name: CI/CD para despliegue en GKE

# on:
#   push:
#     branches:
#       - main

on:
  push:
    branches:
    - 'deployment/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout del código
      uses: actions/checkout@v3

    - name: Configurar la autenticación de Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configurar gcloud
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: 'gke-gcloud-auth-plugin'

    - name: Configurar kubectl
      run: |
        gcloud components install kubectl
        gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} --zone ${{ secrets.GKE_ZONE }} --project ${{ secrets.GCP_PROJECT_ID }}

    - name: Configurar Docker para Artifact Registry
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Construir y empujar imágenes Docker
      run: |
        for service in */; do
          # Ignorar las carpetas deployment/ y .github/
          if [[ "$service" == "deployment/" || "$service" == ".github/" ]]; then
            continue
          fi

          if [ -d "$service" ]; then
            SERVICE_NAME=$(basename "$service")
            echo "Construyendo y empujando la imagen para $SERVICE_NAME..."

            docker build --platform linux/amd64 -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/abcall/$SERVICE_NAME:latest ./$SERVICE_NAME
            docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/abcall/$SERVICE_NAME:latest
          fi
        done

    # - name: Actualizar los manifiestos de Kubernetes con las nuevas imágenes
    #   run: |
    #     for service in */; do
    #       # Ignorar la carpeta deployment y cualquier otra carpeta que no sea un microservicio
    #       if [ "$service" = "deployment/" ]; then
    #         continue
    #       fi

    #       if [ -d "$service" ]; then
    #         SERVICE_NAME=$(basename "$service")
    #         DEPLOYMENT_FILE="deployment/${SERVICE_NAME}-deployment.yaml"

    #         if [ -f "$DEPLOYMENT_FILE" ]; then
    #           echo "Actualizando el manifiesto de $SERVICE_NAME con la nueva imagen..."

    #           # Reemplazar la línea de la imagen en el manifiesto de Kubernetes
    #           sed -i "s|image: .*|image: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/abcall/$SERVICE_NAME:latest|g" "$DEPLOYMENT_FILE"
    #         else
    #           echo "Advertencia: El archivo $DEPLOYMENT_FILE no existe. Asegúrate de que el manifiesto de Kubernetes esté correctamente nombrado."
    #         fi
    #       fi
    #     done

    # - name: Desplegar en GKE
    #   run: |
    #     kubectl apply -f deployment/

    # - name: Verificar el estado de los pods
    #   run: |
    #     kubectl rollout status deployment --all
