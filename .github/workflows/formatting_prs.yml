name: formatting on PRs
on:
  pull_request:
    types: 
      - labeled
      - unlabeled
      - synchronize
      - opened
      - edited
      - ready_for_review
      - reopened
      - unlocked
    branches: [develop]

permissions:
  contents: write

jobs:
  formatting:
    name: Formateo de código
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Configuración del entorno de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Instalar Black
        run: pip install black
      - name: Formateo de código con Black
        run: black .
      - name: Commit de los resultados de Black
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Formateo automático de código en PRs"

  tests_api_gateway:
    name: Pruebas para api-gateway
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Configuración del entorno de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Ejecutar pruebas
        working-directory: api-gateway
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pytest
      - name: Validar resultado con errores
        if: ${{ failure() }}
        run: echo "Una o varias pruebas fallaron"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        run: echo "Todas las pruebas fueron exitosas"

  tests_generacion_reportes:
    name: Pruebas para generacion-reportes
    runs-on: ubuntu-latest
    needs: formatting
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Configuración del entorno de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Ejecutar pruebas
        working-directory: generacion-reportes
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pytest
      - name: Validar resultado con errores
        if: ${{ failure() }}
        run: echo "Una o varias pruebas fallaron"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        run: echo "Todas las pruebas fueron exitosas"