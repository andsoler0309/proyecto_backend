name: Release
on:
  push:
    branches: 
      - 'release**'

permissions:
  contents: write

jobs:    
  tests_api_gateway:
    name: Pruebas para api-gateway
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Configuración del entorno de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Ejecutar pruebas
        working-directory: api-gateway
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pytest
      - name: Validar resultado con errores
        if: ${{ failure() }}
        run: echo "Una o varias pruebas fallaron"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        run: echo "Todas las pruebas fueron exitosas"

  tests_generacion_reportes:
    name: Pruebas para generacion-reportes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Configuración del entorno de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Ejecutar pruebas
        working-directory: generacion-reportes
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pytest
      - name: Validar resultado con errores
        if: ${{ failure() }}
        run: echo "Una o varias pruebas fallaron"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        run: echo "Todas las pruebas fueron exitosas"

  tests_gestor_agentes:
    name: Pruebas para gestor-agentes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Configuración del entorno de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Ejecutar pruebas
        working-directory: gestor-agentes
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pytest
      - name: Validar resultado con errores
        if: ${{ failure() }}
        run: echo "Una o varias pruebas fallaron"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        run: echo "Todas las pruebas fueron exitosas"


  tests_gestor_incidentes:
    name: Pruebas para gestor-incidentes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v2
      - name: Configuración del entorno de Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Ejecutar pruebas
        working-directory: gestor-incidentes
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov
          pytest
      - name: Validar resultado con errores
        if: ${{ failure() }}
        run: echo "Una o varias pruebas fallaron"
      - name: Validar resultado sin errores
        if: ${{ success() }}
        run: echo "Todas las pruebas fueron exitosas"

  release:
    name: Release
    needs: 
      - tests_api_gateway
      - tests_generacion_reportes
      - tests_gestor_agentes
      - tests_gestor_incidentes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout release branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Configurar acceso remoto con GITHUB_TOKEN
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin develop main

      - name: Merge develop into release
        run: |
          git merge origin/develop --no-ff -m "Merge develop into release"

      - name: Merge main into release
        run: |
          git merge origin/main --no-ff -m "Merge main into release"
      
      - name: Push changes to release branch
        run: |
          git push origin ${{ github.ref }}
        
      - name: Crear Pull Request a main
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Merge release branch into main"
          title: "Release: Merge $(echo ${{ github.ref }} | awk -F/ '{print $NF}') into main"
          body: |
            Esta PR sincroniza la rama release con las últimas actualizaciones de develop y main.
          base: main
          head: ${{ github.ref }}
          draft: false
          labels: release