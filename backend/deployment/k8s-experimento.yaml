###################################
# API GATEWAY
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: us-central1-docker.pkg.dev/abcall/abcall/api-gateway:latest
          ports:
            - containerPort: 5000
          env:
            - name: GESTOR_CLIENTES_BASE_URL
              value: http://servicio-gestor-clientes
            - name: GENERACION_REPORTES_BASE_URL
              value: http://servicio-generacion-reportes
            - name: GESTOR_INCIDENTES_BASE_URL
              value: http://servicio-gestor-incidentes
            - name: GESTOR_FIDELIZACION_BASE_URL
              value: http://servicio-gestor-fidelizacion
            - name: DATABASE_URL
              value: postgresql+psycopg2://postgres:1234@192.168.0.3/postgres
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: api-gateway-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5000
    type: HTTP
    requestPath: /api-gateway/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-api-gateway
  annotations:
    cloud.google.com/backend-config: '{"default": "api-gateway-config"}'
spec:
  type: NodePort
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31030

---
###################################
# gestor-clientes
###################################

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestor-clientes
  labels:
    app: gestor-clientes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gestor-clientes
  template:
    metadata:
      labels:
        app: gestor-clientes
    spec:
      containers:
        - name: gestor-clientes
          image: us-central1-docker.pkg.dev/abcall/abcall/gestor-clientes:latest
          ports:
            - containerPort: 5000
          env:
            - name: GENERACION_REPORTES_BASE_URL
              value: http://servicio-generacion-reportes
            - name: DATABASE_URL
              value: postgresql+psycopg2://postgres:1234@192.168.0.3/postgres
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: gestor-clientes-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5000
    type: HTTP
    requestPath: /gestor-clientes/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-gestor-clientes
  annotations:
    cloud.google.com/backend-config: '{"default": "gestor-clientes-config"}'
spec:
  type: NodePort
  selector:
    app: gestor-clientes
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31021
---
###################################
# generacion-reportes
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: generacion-reportes
  labels:
    app: generacion-reportes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: generacion-reportes
  template:
    metadata:
      labels:
        app: generacion-reportes
    spec:
      containers:
        - name: generacion-reportes
          image: us-central1-docker.pkg.dev/abcall/abcall/generacion-reportes:latest
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              value: postgresql+psycopg2://postgres:1234@192.168.0.3/postgres
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: generacion-reportes-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5000
    type: HTTP
    requestPath: /generacion-reportes/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-generacion-reportes
  annotations:
    cloud.google.com/backend-config: '{"default": "generacion-reportes-config"}'
spec:
  type: NodePort
  selector:
    app: generacion-reportes
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31022
---
###################################
# gestor-incidentes
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestor-incidentes
  labels:
    app: gestor-incidentes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gestor-incidentes
  template:
    metadata:
      labels:
        app: gestor-incidentes
    spec:
      containers:
        - name: gestor-incidentes
          image: us-central1-docker.pkg.dev/abcall/abcall/gestor-incidentes:latest
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              value: postgresql+psycopg2://postgres:1234@192.168.0.3/postgres
            - name: VIEW_360_BASE_URL
              value: http://servicio-vista-360
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: gestor-incidentes-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5000
    type: HTTP
    requestPath: /gestor-incidentes/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-gestor-incidentes
  annotations:
    cloud.google.com/backend-config: '{"default": "gestor-incidentes-config"}'
spec:
  type: NodePort
  selector:
    app: gestor-incidentes
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31023
---
###################################
# gestor-fidelizacion
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestor-fidelizacion
  labels:
    app: gestor-fidelizacion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gestor-fidelizacion
  template:
    metadata:
      labels:
        app: gestor-fidelizacion
    spec:
      containers:
        - name: gestor-fidelizacion
          image: us-central1-docker.pkg.dev/abcall/abcall/gestor-fidelizacion:latest
          ports:
            - containerPort: 5000
          env:
            - name: VIEW_360_BASE_URL
              value: http://servicio-vista-360
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: gestor-fidelizacion-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5000
    type: HTTP
    requestPath: /gestor-fidelizacion/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-gestor-fidelizacion
  annotations:
    cloud.google.com/backend-config: '{"default": "gestor-fidelizacion-config"}'
spec:
  type: NodePort
  selector:
    app: gestor-fidelizacion
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31024
---
###################################
# vista-360
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vista-360
  labels:
    app: vista-360
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vista-360
  template:
    metadata:
      labels:
        app: vista-360
    spec:
      containers:
        - name: vista-360
          image: us-central1-docker.pkg.dev/abcall/abcall/vista-360:latest
          ports:
            - containerPort: 5000
          env:
            - name: DATABASE_URL
              value: postgresql+psycopg2://postgres:1234@192.168.0.3/postgres
          imagePullPolicy: Always

---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: vista-360-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 5000
    type: HTTP
    requestPath: /vista-360/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-vista-360
  annotations:
    cloud.google.com/backend-config: '{"default": "vista-360-config"}'
spec:
  type: NodePort
  selector:
    app: vista-360
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 31025